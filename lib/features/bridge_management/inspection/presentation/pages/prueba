        Scaffold(
                body: FormTemplate(
                  title: 'Formulario de Inspección',
                  formKey: controller.formKey,
                  onSave: () async {
                    try {
                      await controller.submitForm();
                      ScaffoldMessenger.of(context).showSnackBar(
                        const SnackBar(
                            content:
                                Text('Inspección en cola para sincronización')),
                      );
                      final hayAlertas = await _tieneAlertas(widget.puenteId);
                      if (hayAlertas && mounted) {
                        showDialog(
                          context: context,
                          builder: (context) => AlertDialog(
                            title: const Text('¡Atención!'),
                            content: const Text(
                                'Se han generado alertas para esta inspección. ¿Deseas revisarlas?'),
                            actions: [
                              TextButton(
                                onPressed: () {
                                  Navigator.pop(context);
                                  Navigator.push(
                                    context,
                                    MaterialPageRoute(
                                      builder: (context) => AlertScreen(
                                          puenteId: widget.puenteId),
                                    ),
                                  );
                                },
                                child: const Text('Ver alertas'),
                              ),
                              TextButton(
                                onPressed: () => Navigator.pop(context),
                                child: const Text('Cerrar'),
                              ),
                            ],
                          ),
                        );
                      }
                    } catch (e) {
                      ScaffoldMessenger.of(context).showSnackBar(
                        SnackBar(content: Text('Error: $e')),
                      );
                    }
                  },
                  sections: [
                    FormSection(
                      titleWidget: DefaultSectionTitle(
                        text: 'Información Básica',
                        trailing: HelpIconButton(
                          helpKey: 'informacionBasica',
                          helpSections: helpSections,
                        ),
                      ),
                      isCollapsible: true,
                      content: Column(
                        crossAxisAlignment: CrossAxisAlignment.start,
                        children: [
                          DynamicForm(
                            fields: Puente.formFields,
                            initialData: puenteData!,
                            onSave: (data) => controller.updatePuenteData(data),
                          ),
                          DynamicForm(
                            fields: Inspeccion.formFields,
                            initialData: controller.inspeccion.toJson(),
                            onSave: (data) => controller.updateInspeccionData(data),
                          ),
                          TextFormField(
                            initialValue: inspectorName,
                            decoration: const InputDecoration(labelText: 'Inspector'),
                            readOnly: true,
                          ),
                        ],
                      ),
                    ),

                    ...componentList.asMap().entries.map((entry) {
                      final index = entry.key;
                      final component = entry.value;
                      return FormSection(
                        titleWidget: DefaultSectionTitle(
                          text: component['title']!,
                          trailing: HelpIconButton(
                            helpKey: 'componente_${component['title']}',
                            helpSections: helpSections,
                          ),
                        ),
                        isCollapsible: true,
                        content: Column(
                          crossAxisAlignment: CrossAxisAlignment.start,
                          children: [
                            DynamicForm(
                              fields: {...Componente.formFields},
                              initialData: controller.inspeccion.componentes[index].toJson(),
                              onSave: (data) => controller.updateComponenteData(index, data),
                              extraData: {
                                'puenteId': widget.puenteId.toString(),
                                'inspeccionUuid': controller.inspeccion.inspeccionUuid,
                                'componenteUuid': controller.inspeccion.componentes[index].componenteUuid,
                              },
                            ),
                            const SizedBox(height: 16.0),
                            const Text(
                              'Reparaciones',
                              style: TextStyle(
                                fontSize: 18.0,
                                fontWeight: FontWeight.bold,
                                color: Colors.blueGrey,
                              ),
                            ),
                            DynamicForm(
                              fields: Reparacion.formFields,
                              initialData: controller.inspeccion.componentes[index].reparacion?.toJson() ?? {},
                              onSave: (data) => controller.updateReparacionData(index, data),
                            ),
                          ],
                        ),
                      );
                    }),

                  ],
                ),

              ),




              FormSection(
                      titleWidget: const SizedBox.shrink(),
                      isCollapsible: false,
                      content: Padding(
                        padding: const EdgeInsets.symmetric(vertical: 5.0),
                        child: Center(
                          child: SizedBox(
                            width: double.infinity,
                            height: 48,
                            child: Padding(
                              padding: const EdgeInsets.symmetric(horizontal: 32.0),
                              child: ElevatedButton(
                                onPressed: _saveForm,
                                style: ElevatedButton.styleFrom(
                                  backgroundColor: const Color(0xFF003366),
                                  shape: RoundedRectangleBorder(
                                    borderRadius: BorderRadius.circular(12),
                                  ),
                                ),
                                child: const Text(
                                  'GUARDAR',
                                  style: TextStyle(
                                    fontWeight: FontWeight.bold,
                                    color: Colors.white,
                                    letterSpacing: 1.0,
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                      ),
                    )